# KanBul Mobil UygulamasÄ± Proje DetaylarÄ±

## ğŸ“‹ Proje Ã–zeti

KanBul, kan baÄŸÄ±ÅŸÃ§Ä±larÄ± ile acil kan ihtiyacÄ± olan hastane ve hasta yakÄ±nlarÄ±nÄ± gerÃ§ek zamanlÄ±, konum tabanlÄ± ve gÃ¼venli bir ÅŸekilde eÅŸleÅŸtiren bir mobil uygulamadÄ±r. Acil kan ihtiyaÃ§larÄ±na hÄ±zlÄ± Ã§Ã¶zÃ¼m Ã¼retmeyi, kan bulunamamasÄ± kaynaklÄ± can kayÄ±plarÄ±nÄ± azaltmayÄ± ve toplumda kan baÄŸÄ±ÅŸÄ± farkÄ±ndalÄ±ÄŸÄ±nÄ± artÄ±rmayÄ± hedefler.


##Hedef Kitle:
  Bireysel KullanÄ±cÄ±lar:
    GÃ¶nÃ¼llÃ¼ Kan BaÄŸÄ±ÅŸÃ§Ä±larÄ±
    Kan Ä°htiyacÄ± Olan Hasta/Hasta YakÄ±nlarÄ± (Bu iki rol aynÄ± kiÅŸide birleÅŸebilir)
  Kurumsal KullanÄ±cÄ±lar:
    Hastane Yetkilileri (Kan talebi aÃ§ma, baÄŸÄ±ÅŸ yÃ¶netimi)

## ğŸ”§ KullanÄ±lan Teknolojiler

**Frontend:**
- Flutter (Cross-platform geliÅŸtirme)
- Provider (State management)
- GoRouter (Navigasyon yÃ¶netimi)
- Google Maps Flutter (Harita entegrasyonu)
- FL Charts (Veri gÃ¶rselleÅŸtirme)
- Image Picker (Medya seÃ§imi)

**Backend ve VeritabanÄ±:**
- Firebase Authentication (Kimlik doÄŸrulama)
- Cloud Firestore (NoSQL veritabanÄ±)
- Firebase Storage (Medya depolama)
- Firebase Cloud Messaging (Bildirim servisi)
- Cloud Functions (Sunucu taraflÄ± iÅŸlevler)
- GeoFirestore (Konum tabanlÄ± sorgular)


## ğŸ“Š VeritabanÄ± Modeli

erDiagram
    USERS {
        string userId PK
        string email
        string fullName
        string phoneNumber NULL
        string role "'individual' veya 'hospital'" %% Ana rol
        string photoUrl NULL
        timestamp createdAt
        timestamp updatedAt
        %% GÃ¶mÃ¼lÃ¼ Ayarlar (Map olarak)
        object settings "{notificationsEnabled(bool, default:true), privacyLevel(string 'public'|'private', default:'public'), locationSharingEnabled(bool, default:true)}"
        %% GÃ¶mÃ¼lÃ¼ Profil Bilgileri (Role gÃ¶re doldurulur)
        object profileData "{
            bloodType: string NULL, %% Individual
            lastDonationDate: timestamp NULL, %% Individual
            donationCount: int DEFAULT 0, %% Individual
            isAvailableToDonate: bool DEFAULT true, %% Individual
            medicalInfo: string NULL, %% Individual
            hospitalName: string NULL, %% Hospital
            hospitalAddress: string NULL, %% Hospital
            hospitalContact: string NULL, %% Hospital
            isHospitalVerified: bool DEFAULT false %% Hospital
        }"
        %% GÃ¶mÃ¼lÃ¼ Son Bilinen Konum (Map olarak)
        object lastKnownLocation NULL "{latitude(number), longitude(number), timestamp(timestamp)}"
    }

    BLOOD_REQUESTS {
        string requestId PK
        string creatorId FK
        string creatorName DENORMALIZED NULL
        string creatorRole DENORMALIZED NULL %% 'individual' veya 'hospital'
        string bloodType
        string status "'active', 'fulfilled', 'canceled'"
        GeoPoint location PK %% Firestore GeoPoint tipi
        string title
        string description
        int unitsNeeded
        int urgencyLevel
        int responseCount DEFAULT 0 DENORMALIZED
        timestamp createdAt
        timestamp updatedAt
        string patientInfo NULL
        string hospitalName DENORMALIZED NULL %% EÄŸer hastane oluÅŸturduysa
    }

    DONATIONS {
        string donationId PK
        string donorId FK
        string donorName DENORMALIZED NULL
        string donorBloodType DENORMALIZED NULL
        string donorPhotoUrl DENORMALIZED NULL
        string requestId FK
        string requestCreatorId FK
        string status "'pending', 'accepted', 'rejected', 'completed'"
        timestamp respondedAt
        timestamp scheduledDate NULL
        timestamp completedDate NULL
        string message NULL
        timestamp createdAt
        timestamp updatedAt
        %% Opsiyonel: BaÄŸÄ±ÅŸÄ±n yapÄ±ldÄ±ÄŸÄ± yer
        GeoPoint donationLocation NULL
    }

    BADGES {
       string badgeId PK
       string name
       string description
       string imageUrl
       string criteria "Ã¶rn: 'donationCount >= 5'"
       string badgeType "'donation', 'community', etc."
    }

    USER_BADGES {
       %% Alt koleksiyon olarak daha mantÄ±klÄ±: users/{userId}/badges/{badgeId}
       %% Bu yÃ¼zden ayrÄ± bir PK'ya gerek yok, belge ID'si badgeId olabilir.
       string badgeId PK "Badge ID'si"
       timestamp earningDate
       %% string userId FK (Alt koleksiyon olduÄŸu iÃ§in zaten bilinir)
    }

    %% Ä°liÅŸkiler (Alt koleksiyonlar ve referanslar)
    USERS ||--|{ BLOOD_REQUESTS : creates
    USERS ||--|{ DONATIONS : makes_response_to
    USERS ||--o{ USER_BADGES : earns "(Subcollection)"
    BLOOD_REQUESTS ||--o{ DONATIONS : associated_with
    BADGES |o--o{ USER_BADGES : defines
```

## ğŸ“± Sistem Mimarisi

**Mimari YaklaÅŸÄ±m: KatmanlÄ± Mimari (MVVM + Repository Pattern)**

```
Presentation â†’ Business Logic â†’ Data â†’ External
```

1. **Presentation KatmanÄ±:** Flutter UI, Provider, GoRouter
2. **Business Logic KatmanÄ±:** Providers, Use Cases, Models
3. **Data KatmanÄ±:** Repositories, Services, DTOs
4. **External KatmanÄ±:** Firebase, Google Maps, Platform APIs

## ğŸ”„ Ä°ÅŸ AkÄ±ÅŸÄ± ve Metodoloji

**Agile/Scrum Metodolojisi:**
- **Sprint SÃ¼resi:** 2 hafta
- **GÃ¼nlÃ¼k Standuplar:** 15 dakika
- **Sprint Planlama:** Her sprint baÅŸÄ±nda 2 saat
- **Sprint Retrospektifi:** Her sprint sonunda 1 saat
- **Kanban Tablosu:** To Do, In Progress, Review, Done

**GeliÅŸtirme SÃ¼reci:**
1. Requirement Analysis â†’ UI/UX Design â†’ Development â†’ Testing â†’ Deployment
2. Prototip, PoC ve MVP yaklaÅŸÄ±mÄ± ile kademeli geliÅŸtirme
3. Feature branch workflow ile code review ve merge sÃ¼reÃ§leri

## ğŸ“… Ä°ÅŸ PlanÄ± ve Zaman Ã‡izelgesi

**Faz 1: Proje Kurulumu (1 hafta)**
- Proje yapÄ±sÄ±nÄ±n oluÅŸturulmasÄ±
- Temel paketlerin kurulumu
- CI/CD pipeline kurulumu

**Faz 2-3: TasarÄ±m ve GiriÅŸ/KayÄ±t EkranlarÄ± (2 hafta)**
- UI/UX tasarÄ±mlarÄ±n tamamlanmasÄ±
- GiriÅŸ/KayÄ±t ekranlarÄ±nÄ±n geliÅŸtirilmesi
- Firebase Authentication entegrasyonu

**Faz 4-5: Rol Sistemi ve Ana Ekranlar (2 hafta)**
- KullanÄ±cÄ± rolleri ve yÃ¶nlendirme
- Ana ekranlarÄ±n tasarlanmasÄ± ve geliÅŸtirilmesi
- State management stratejisinin uygulanmasÄ±

**Faz 6: BaÄŸÄ±ÅŸÃ§Ä± Paneli (2 hafta)**
- BaÄŸÄ±ÅŸÃ§Ä± ana ekranÄ±
- Puan ve rozet sistemi
- YakÄ±ndaki talepler haritasÄ±

**Faz 7: Kan Talebi OluÅŸturma (2 hafta)**
- Talep formu oluÅŸturma
- Talep yÃ¶netim ekranÄ±
- Bildirim sistemi

**Faz 8: Harita GÃ¶rÃ¼nÃ¼mÃ¼ (2 hafta)**
- Google Maps entegrasyonu
- Talep iÅŸaretleyicileri ve kÃ¼meleme
- Rota oluÅŸturma ve navigasyon

**Faz 9: Ã‡aÄŸrÄ±ya YanÄ±t Verme (2 hafta)**
- YanÄ±t verme sÃ¼reci
- Randevu oluÅŸturma
- BaÄŸÄ±ÅŸ takibi

**Faz 10: Profil ve BaÄŸÄ±ÅŸ GeÃ§miÅŸi (2 hafta)**
- Profil ekranÄ± ve dÃ¼zenleme
- BaÄŸÄ±ÅŸ geÃ§miÅŸi ve istatistikler
- Rozetler sistemi

**Faz 11: Bildirimler ve HatÄ±rlatmalar (1 hafta)**
- Push bildirimleri
- Konum bazlÄ± bildirimler
- Randevu hatÄ±rlatmalarÄ±



## ğŸ“¥ Girdiler ve ğŸ“¤ Ã‡Ä±ktÄ±lar

### Girdiler (Inputs)

1. **KullanÄ±cÄ± Girdileri:**
   - Kimlik doÄŸrulama verileri (e-posta, ÅŸifre)
   - KiÅŸisel bilgiler (ad-soyad, telefon)
   - SaÄŸlÄ±k bilgileri (kan grubu, baÄŸÄ±ÅŸ geÃ§miÅŸi)
   - Konum bilgileri
   - Kan talebi detaylarÄ±
   - YanÄ±t ve randevu bilgileri

2. **Sistem Girdileri:**
   - Firebase Auth durumu
   - Konum verileri (GPS)
   - Bildirim tokenleri
   - Yerel ve uzak veritabanÄ± durumu

3. **DÄ±ÅŸ Servis Girdileri:**
   - Google Maps API verileri
   - Firebase Cloud Messaging bildirimleri

### Ã‡Ä±ktÄ±lar (Outputs)

1. **KullanÄ±cÄ± ArayÃ¼zÃ¼ Ã‡Ä±ktÄ±larÄ±:**
   - Profil gÃ¶rÃ¼nÃ¼mÃ¼
   - Kan talepleri listesi ve haritasÄ±
   - BaÄŸÄ±ÅŸ geÃ§miÅŸi ve istatistikleri
   - Rozet koleksiyonu
   - Bildirim ve uyarÄ±lar

2. **Veri Ä°ÅŸleme Ã‡Ä±ktÄ±larÄ±:**
   - KayÄ±tlÄ± kullanÄ±cÄ± profilleri
   - Kan talepleri kaydÄ±
   - BaÄŸÄ±ÅŸ kayÄ±tlarÄ± ve yanÄ±tlar
   - KazanÄ±lan rozetler
   - KullanÄ±cÄ± ayarlarÄ±

3. **Entegrasyon Ã‡Ä±ktÄ±larÄ±:**
   - Bildirim gÃ¶nderimi
   - Harita Ã¼zerinde talep gÃ¶rÃ¼nÃ¼mleri
   - Navigasyon yÃ¶nlendirmeleri
   - PaylaÅŸÄ±labilir baÄŸlantÄ±lar


